name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e .[dev,test]
        
    - name: Lint with ruff
      run: |
        source .venv/bin/activate
        ruff check opencontrol/ tests/
        
    - name: Format check with black
      run: |
        source .venv/bin/activate
        black --check opencontrol/ tests/
        
    - name: Type check with mypy
      run: |
        source .venv/bin/activate
        mypy opencontrol/
        
    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests/ --cov=opencontrol --cov-report=xml --cov-report=html
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install documentation dependencies
      run: |
        pip install mkdocs mkdocs-material mkdocstrings[python]
        
    - name: Build documentation
      run: |
        mkdocs build --strict
        
    - name: Deploy documentation
      if: github.ref == 'refs/heads/main'
      run: |
        mkdocs gh-deploy --force

  performance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install -e .[dev,test]
        
    - name: Run performance benchmarks
      run: |
        python scripts/profile_model.py --benchmark
        
    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: benchmark-results.json 